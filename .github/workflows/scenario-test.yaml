name: scenario-test
on:
  workflow_dispatch:

jobs:
  scenario-test:
    runs-on: ubuntu-24.04
    container: ghcr.io/autowarefoundation/autoware:universe-devel
    steps:
    - name: Check out repository
      uses: actions/checkout@v4

    - name: Free disk space (optional)
      uses: ./.github/actions/free-disk-space

    - name: Install system dependencies
      run: |
        apt-get update
        apt-get install -y \
          unzip \
          curl \
          gnupg2 \
          lsb-release \
          python3-pip \
          git \
          libtinyxml2-dev \
          ros-humble-pcl-ros
        pip install --upgrade gdown vcstool

    - name: Clone Autoware and import simulator.repos
      run: |
        mkdir -p ~/autoware_ws/src
        cd ~/autoware_ws/src
        git clone --recurse-submodules https://github.com/autowarefoundation/autoware.git autoware
        vcs import < autoware/simulator.repos

    - name: Install ROS dependencies
      run: |
        cd ~/autoware_ws
        rosdep update
        rosdep install --from-paths src --ignore-src -r -y

    - name: Build only necessary Autoware packages
      run: |
        cd ~/autoware_ws
        source /opt/ros/humble/setup.bash
        colcon build --symlink-install --packages-up-to scenario_test_runner
        source install/setup.bash

    - name: Check important packages
      run: |
        source ~/autoware_ws/install/setup.bash
        ros2 pkg list | grep scenario_test_runner

    - name: Download scenario file
      run: |
        gdown --id 1Tq7snfDPsuPHPtl50aL5fJY6paiC-HxV -O sample-scenario.yaml

    - name: Download and extract sample map
      run: |
        gdown --id 1499_nsbUbIeturZaDj7jhUownh5fvXHd -O sample-map-planning.zip
        mkdir -p /home/user/autoware_map
        unzip sample-map-planning.zip -d /home/user/autoware_map

    - name: Fix scenario file paths
      run: |
        sed -i "s@/home/user/sample-map-planning/pointcloud_map.pcd@/home/user/autoware_map/sample-map-planning/pointcloud_map.pcd@g" sample-scenario.yaml

    - name: Launch scenario_test_runner
      run: |
        source ~/autoware_ws/install/setup.bash
        ros2 launch scenario_test_runner scenario_test_runner.launch.py \
          architecture_type:=awf/universe/20250130 \
          record:=true \
          scenario:=./sample-scenario.yaml \
          sensor_model:=sample_sensor_kit \
          vehicle_model:=sample_vehicle \
          initialize_duration:=100 \
          output_directory:=./results \
          simulate_localization:=false \
          disable_lanelet_pose_validation:=true 2>&1 | tee scenario_output.log || true

    - name: Parse and report test results
      run: |
        RESULT_FILE="./results/test_results.log"
        XML_FILE="./results/scenario_test_runner/result.junit.xml"
        if [ -f "$RESULT_FILE" ]; then
          echo "<?xml version=\"1.0\" encoding=\"UTF-8\"?>" > "$XML_FILE"
          echo "<testsuite name='ScenarioTest'>" >> "$XML_FILE"
          while IFS= read -r line; do
            echo "<testcase name=\"$line\"/>" >> "$XML_FILE"
          done < "$RESULT_FILE"
          echo "</testsuite>" >> "$XML_FILE"
        else
          echo "WARNING: No test results found. Simulation may have failed."
          cat scenario_output.log
        fi
