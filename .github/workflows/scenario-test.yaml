name: scenario-test
on:
  workflow_dispatch:

jobs:
  scenario-test:
    runs-on: ubuntu-24.04
    container: ghcr.io/autowarefoundation/autoware:universe-devel
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Free disk space
        uses: ./.github/actions/free-disk-space

      - name: Install required packages
        run: |
          apt-get update
          apt-get install -y unzip curl gnupg2 lsb-release python3-pip git
          pip install --upgrade gdown vcstool

      - name: Setup Autoware workspace
        run: |
          mkdir -p ~/autoware_ws/src
          cd ~/autoware_ws
          git clone --branch v1.0.0 --recurse-submodules https://github.com/autowarefoundation/autoware.git src/autoware
          cd src
          vcs import < autoware/autoware.repos
          vcs import < autoware/simulator.repos

      - name: Install ROS dependencies
        run: |
          cd ~/autoware_ws
          rosdep update
          rosdep install --from-paths src --ignore-src -r -y

      - name: Build Autoware core
        run: |
          cd ~/autoware_ws
          source /opt/ros/humble/setup.bash
          colcon build --symlink-install --cmake-args -DCMAKE_BUILD_TYPE=Release
          source install/setup.bash

      - name: Download test assets
        run: |
          gdown --id 1Tq7snfDPsuPHPtl50aL5fJY6paiC-HxV -O sample-scenario.yaml
          gdown --id 1499_nsbUbIeturZaDj7jhUownh5fvXHd -O sample-map-planning.zip
          unzip sample-map-planning.zip

      - name: Build scenario_test_runner
        run: |
          source ~/autoware_ws/install/setup.bash
          colcon build --packages-select scenario_test_runner
          source install/setup.bash

      - name: Execute scenario test
        run: |
          source ~/autoware_ws/install/setup.bash
          ros2 launch scenario_test_runner scenario_test_runner.launch.py \
            architecture_type:=awf/universe/20250130 \
            record:=false \
            scenario:="./sample-scenario.yaml" \
            sensor_model:=sample_sensor_kit \
            vehicle_model:=sample_vehicle \
            initialize_duration:=100 \
            output_directory:=./results

      - name: Process results
        run: |
          if [ -f "./results/test_results.log" ]; then
            echo "Test results:"
            cat ./results/test_results.log
          else
            echo "Error: No test results found!"
            exit 1
          fi
