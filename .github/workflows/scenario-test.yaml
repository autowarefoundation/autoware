name: scenario-test
on:
  workflow_dispatch:

jobs:
  scenario-test:
    runs-on: ubuntu-24.04
    container: ghcr.io/autowarefoundation/autoware:universe-devel
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Free disk space
        uses: ./.github/actions/free-disk-space

      - name: Install required packages
        run: |
          apt-get update
          apt-get install -y unzip curl gnupg2 lsb-release python3-pip git ros-humble-pcl-ros
          pip install --upgrade gdown vcstool
        shell: bash

      - name: Clone Autoware and Import simulator.repos
        run: |
          mkdir -p ~/autoware_ws/src
          cd ~/autoware_ws
          git clone --recurse-submodules https://github.com/autowarefoundation/autoware.git src/autoware
          cd src
          vcs import < autoware/simulator.repos
        shell: bash

      - name: Install ROS dependencies
        run: |
          cd ~/autoware_ws
          rosdep update
          rosdep install --from-paths src --ignore-src -r -y
        shell: bash

      - name: Download scenario and map
        run: |
          gdown --id 1Tq7snfDPsuPHPtl50aL5fJY6paiC-HxV -O sample-scenario.yaml
          gdown --id 1499_nsbUbIeturZaDj7jhUownh5fvXHd -O sample-map-planning.zip
          mkdir -p /home/user/autoware_map
          unzip -o sample-map-planning.zip -d /home/user/autoware_map
          sed -i "s@/home/user/sample-map-planning/pointcloud_map.pcd@/home/user/autoware_map/sample-map-planning/pointcloud_map.pcd@g" sample-scenario.yaml
        shell: bash

      - name: Build Autoware (excluding problematic rviz plugin)
        run: |
          cd ~/autoware_ws
          source /opt/ros/humble/setup.bash
          colcon build --symlink-install --cmake-args -DCMAKE_BUILD_TYPE=Release -DBUILD_REAL_TIME_FACTOR_CONTROL_RVIZ_PLUGIN=OFF
          source install/setup.bash
        shell: bash

      - name: Run scenario_test_runner
        run: |
          cd ~/autoware_ws
          source install/setup.bash
          if [ -f "./sample-scenario.yaml" ]; then
            ros2 launch scenario_test_runner scenario_test_runner.launch.py \
              architecture_type:=awf/universe/20250130 \
              record:=true \
              scenario:=./sample-scenario.yaml \
              sensor_model:=sample_sensor_kit \
              vehicle_model:=sample_vehicle \
              initialize_duration:=100 \
              output_directory:=./results \
              simulate_localization:=false \
              disable_lanelet_pose_validation:=true \
              || echo "Scenario runner failed, but continuing for diagnostics"
          else
            echo "Missing sample-scenario.yaml"
            exit 1
          fi
        shell: bash

      - name: Print simulation logs if failure
        run: |
          if [ -f scenario_output.log ]; then
            echo "Simulation Output:"
            cat scenario_output.log
          else
            echo "No scenario_output.log found."
          fi
        shell: bash
