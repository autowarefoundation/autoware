name: scenario-test
on:
  workflow_dispatch:

jobs:
  scenario-test:
    runs-on: ubuntu-24.04
    container: ghcr.io/autowarefoundation/autoware:universe-devel
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set git config
        uses: autowarefoundation/autoware-github-actions/set-git-config@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Free disk space
        uses: ./.github/actions/free-disk-space

      - name: Download scenario file
        run: |
          gdown --id 1Tq7snfDPsuPHPtl50aL5fJY6paiC-HxV -O scenario.yaml
        shell: bash

      - name: Install unzip
        run: |
          apt-get update && apt-get install -y unzip
        shell: bash

      - name: Download sample-map-planning maps
        run: |
          gdown --id 1499_nsbUbIeturZaDj7jhUownh5fvXHd -O sample-map-planning.zip
          mkdir -p /home/vishalchauhan/autoware_map  # Ensure directory exists
          unzip sample-map-planning.zip -d /home/vishalchauhan/autoware_map
        shell: bash

      - name: Debug: Check if scenario file exists
        run: |
          echo "Checking for scenario file..."
          ls -lah /home/vishalchauhan/autoware_map/
          if [ -f "/home/vishalchauhan/autoware_map/sample-scenario.yaml" ]; then
              echo "✅ Scenario file found!"
          else
              echo "❌ Error: Scenario file is missing!"
              exit 1
          fi
        shell: bash

      - name: Fix permissions for scenario file
        run: |
          chmod 644 /home/vishalchauhan/autoware_map/sample-scenario.yaml
        shell: bash

      - name: Modify the map file path in scenario
        run: |
          if [ -f scenario.yaml ]; then
              sed -i 's/original_path/updated_path/g' scenario.yaml
          else
              echo "Error: scenario.yaml not found!"
              exit 1
          fi
        shell: bash

      - name: Colcon build scenario_test_runner
        run: |
          cd /home/autoware  # Ensure correct workspace path
          colcon build --packages-up-to scenario_test_runner
          source install/setup.bash
          colcon list
        shell: bash

      - name: Launch scenario_test_runner
        run: |
          SCENARIO_FILE="/home/vishalchauhan/autoware_map/sample-scenario.yaml"
          
          if [ -f "$SCENARIO_FILE" ]; then
              echo "✅ Launching scenario_test_runner..."
              ros2 launch scenario_test_runner scenario_test_runner.launch.py \
                architecture_type:=awf/universe/20250130 \
                record:=false \
                scenario:="$SCENARIO_FILE" \
                sensor_model:=sample_sensor_kit \
                vehicle_model:=sample_vehicle \
                initialize_duration:=100 \
                output_directory:=/home/vishalchauhan/results
          else
              echo "❌ Error: Scenario file is missing!"
              exit 1
          fi
        shell: bash

      - name: Parse results and detect failure
        run: |
          RESULT_FILE="/results/test_results.log"
          XML_FILE="/results/scenario_test_runner/result.junit.xml"

          if [ -f "$RESULT_FILE" ]; then
              echo "Parsing test results..."
              FAILURES=$(grep -i "failure" "$RESULT_FILE" | wc -l)
              ERRORS=$(grep -i "error" "$RESULT_FILE" | wc -l)
              
              echo "<?xml version=\"1.0\" encoding=\"UTF-8\"?>" > "$XML_FILE"
              echo "<testsuite name='ScenarioTest' failures='$FAILURES' errors='$ERRORS'>" >> "$XML_FILE"
              
              while IFS= read -r line; do
                  if echo "$line" | grep -qi "failure"; then
                      echo "  <testcase name='$line'>" >> "$XML_FILE"
                      echo "    <failure message='Detected failure'>$line</failure>" >> "$XML_FILE"
                      echo "  </testcase>" >> "$XML_FILE"
                  elif echo "$line" | grep -qi "error"; then
                      echo "  <testcase name='$line'>" >> "$XML_FILE"
                      echo "    <error message='Detected error'>$line</error>" >> "$XML_FILE"
                      echo "  </testcase>" >> "$XML_FILE"
                  fi
              done < "$RESULT_FILE"

              echo "</testsuite>" >> "$XML_FILE"
              echo "Results parsed and saved in $XML_FILE"
          else
              echo "❌ No result file found, marking as failure."
              exit 1
          fi
        shell: bash
