name: scenario-test
on:
  workflow_dispatch:

jobs:
  scenario-test:
    runs-on: ubuntu-24.04
    container: ghcr.io/autowarefoundation/autoware:universe-devel
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Free disk space
        uses: ./.github/actions/free-disk-space

      - name: Install critical dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y \
            ros-humble-tinyxml2-vendor \
            ros-humble-embree-vendor \
            libomp-dev \
            libglfw3-dev
          python3 -m pip install --user gdown vcstool
        shell: bash

      - name: Configure build environment
        run: |
          mkdir -p ~/autoware_ws/src
          git clone --depth 1 --branch main \
            https://github.com/autowarefoundation/autoware.git ~/autoware_ws/src/autoware
          echo "yaml https://raw.githubusercontent.com/autowarefoundation/autoware/main/rosdep/autoware.yaml" | sudo tee /etc/ros/rosdep/sources.list.d/51-autoware.list
          sudo rosdep fix-permissions
        shell: bash

      - name: Resolve dependencies
        run: |
          cd ~/autoware_ws
          rosdep update && rosdep install -y \
            --from-paths src \
            --ignore-src \
            --skip-keys "libopengl-dev libx11-dev opengl" \
            --rosdistro humble
        shell: bash

      - name: Build core components
        run: |
          cd ~/autoware_ws
          source /opt/ros/humble/setup.bash
          colcon build --cmake-args \
            -DCMAKE_BUILD_TYPE=Release \
            -DBUILD_TESTING=OFF \
            --packages-up-to \
              traffic_simulator \
              openscenario_interpreter \
              scenario_test_runner
        shell: bash

      - name: Build simulation components
        run: |
          cd ~/autoware_ws
          source install/setup.bash
          colcon build --cmake-args \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_CXX_FLAGS="-Wno-unused-parameter -Wno-stringop-overflow" \
            --packages-select \
              simple_sensor_simulator \
              random_test_runner
        shell: bash

      - name: Run scenario tests
        run: |
          mkdir -p results
          source ~/autoware_ws/install/setup.bash
          ros2 launch scenario_test_runner scenario_test_runner.launch.py \
            scenario:="$(pwd)/sample-scenario.yaml" \
            output_directory:="$(pwd)/results" \
            --disable-lanelet-pose-validation \
            2>&1 | tee results/scenario.log
        shell: bash

      - name: Process results
        if: always()
        run: |
          echo "##[group]Build Artifacts"
          find ~/autoware_ws/build -name "*.log" -print -exec tail -n 50 {} \;
          echo "##[endgroup]"
          
          if grep -q "ERROR" results/scenario.log; then
            echo "##[error] Scenario test failures detected"
            exit 1
          fi
        shell: bash
